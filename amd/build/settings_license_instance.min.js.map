{"version":3,"file":"settings_license_instance.min.js","sources":["../src/settings_license_instance.js"],"sourcesContent":["define(['mod_ivs/progressbar'], function (progressbar) {\n    return {\n        init: function () {\n            // Find all unprocessed progress elements\n            const progressElements = document.querySelectorAll('.ivs-progress:not(.processed)');\n\n            progressElements.forEach(function (element) {\n                var circle = new progressbar.Circle(element, {\n                    color: '#1177d1',\n                    strokeWidth: 6,\n                    trailWidth: 5,\n                    easing: 'easeInOut',\n                    //easing: 'bounce',\n                    duration: 1000,\n                    text: {\n                        // Initial value for text.\n                        // Default: null\n                        value: element.dataset.label,\n\n                        // Class name for text element.\n                        // Default: 'progressbar-text'\n                        className: 'progressbar__label',\n\n                        // Inline CSS styles for the text element.\n                        // If you want to modify all CSS your self, set null to disable\n                        // all default styles.\n                        // If the style option contains values, container is automatically\n                        // set to position: relative. You can disable behavior this with\n                        // autoStyleContainer: false\n                        // If you specify anything in this object, none of the default styles\n                        // apply\n                        // Default: object speficied below\n                        style: {\n                            // Text color.\n                            // Default: same as stroke color (options.color)\n                            color: '#f00',\n                            position: 'absolute',\n                            left: '50%',\n                            top: '50%',\n                            padding: 0,\n                            margin: 0,\n                            // You can specify styles which will be browser prefixed\n                            transform: {\n                                prefix: true,\n                                value: 'translate(-50%, -50%)'\n                            }\n                        },\n                        // Only effective if the text.style is not null\n                        // By default position: relative is applied to container if text\n                        // is set. Setting this to false disables that feature.\n                        autoStyleContainer: true,\n\n                        // Only effective if the shape is SemiCircle.\n                        // If true, baseline for text is aligned with bottom of\n                        // the SVG canvas. If false, bottom line of SVG canvas\n                        // is in the center of text.\n                        // Default: true\n                        alignToBottom: true\n                    },\n                });\n\n                circle.animate(element.dataset.progress);\n                element.classList.add('processed');\n            });\n        }\n    };\n});\n"],"names":["define","progressbar","init","document","querySelectorAll","forEach","element","Circle","color","strokeWidth","trailWidth","easing","duration","text","value","dataset","label","className","style","position","left","top","padding","margin","transform","prefix","autoStyleContainer","alignToBottom","animate","progress","classList","add"],"mappings":"AAAAA,2CAAO,CAAC,wBAAwB,SAAUC,mBAC/B,CACHC,KAAM,WAEuBC,SAASC,iBAAiB,iCAElCC,SAAQ,SAAUC,SAClB,IAAIL,YAAYM,OAAOD,QAAS,CACzCE,MAAO,UACPC,YAAa,EACbC,WAAY,EACZC,OAAQ,YAERC,SAAU,IACVC,KAAM,CAGFC,MAAOR,QAAQS,QAAQC,MAIvBC,UAAW,qBAWXC,MAAO,CAGHV,MAAO,OACPW,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,QAAS,EACTC,OAAQ,EAERC,UAAW,CACPC,QAAQ,EACRX,MAAO,0BAMfY,oBAAoB,EAOpBC,eAAe,KAIhBC,QAAQtB,QAAQS,QAAQc,UAC/BvB,QAAQwB,UAAUC,IAAI"}